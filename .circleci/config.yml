# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: "Install kubelet, kubeadm and kubectl"
          command: |
            sudo -i
            CNI_VERSION="v0.7.5"
            mkdir -p /opt/cni/bin
            curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-amd64-${CNI_VERSION}.tgz" | tar -C /opt/cni/bin -xz 
            CRICTL_VERSION="v1.12.0"
            mkdir -p /opt/bin
            curl -L "https://github.com/kubernetes-incubator/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz" | tar -C /opt/bin -xz
            RELEASE="$(curl -sSL https://dl.k8s.io/release/stable.txt)"
            mkdir -p /opt/bin
            cd /opt/bin
            curl -L --remote-name-all https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/amd64/{kubeadm,kubelet,kubectl}
            chmod +x {kubeadm,kubelet,kubectl}
            curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/kubelet.service" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service
            mkdir -p /etc/systemd/system/kubelet.service.d
            curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/10-kubeadm.conf" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
            systemctl enable --now kubelet

      - run:
          name: "install helm"
          command: |
            curl -LO https://git.io/get_helm.sh
            chmod 700 get_helm.sh
            ./get_helm.sh
      - run:
          name: "init cluster"
          command: |
            kubeadm init
  # build:
  #   docker:
  #     # specify the version
  #     - image: circleci/golang:1.9
  #     # Specify service dependencies here if necessary
  #     # CircleCI maintains a library of pre-built images
  #     # documented at https://circleci.com/docs/2.0/circleci-images/
  #     # - image: circleci/postgres:9.4
  #   #### TEMPLATE_NOTE: go expects specific checkout path representing url
  #   #### expecting it in the form of
  #   ####   /go/src/github.com/circleci/go-tool
  #   ####   /go/src/bitbucket.org/circleci/go-tool
  #   working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
  #   steps:
  #     # specify any bash command here prefixed with `run: `
  #     - run: go get -v -t -d ./...
  #     - run: go test -v ./...
